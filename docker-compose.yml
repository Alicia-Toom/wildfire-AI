version: "3"

services:
  api:
    container_name: "api"
    build:
      context: "./api"
      dockerfile: "Dockerfile"
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      - vault
    environment:
      VAULT_ADDR: "http://vault:8200"
      VAULT_TOKEN: "${TOKEN}"
    volumes:
      - ./.env:/home/wildfire/api/.vault-token

  fireclassifier:
    container_name: "fireclassifier"
    build:
      context: "./FireML/FireClassifier"
      dockerfile: "Dockerfile"
    depends_on:
      - vault
    environment:
      VAULT_ADDR: "http://vault:8200"
      VAULT_TOKEN: "${TOKEN}"
      LOG_LEVEL: "${LOG_LEVEL}"
    volumes:
      - ./.env:/home/wildfire/.vault-token

  firedetection:
    container_name: "firedetection"
    build:
      context: "./FireML/FireDetection"
      dockerfile: "Dockerfile"
    depends_on:
      - vault
    environment:
      VAULT_ADDR: "http://vault:8200"
      VAULT_TOKEN: "${TOKEN}"
      LOG_LEVEL: "${LOG_LEVEL}"
    volumes:
      - ./.env:/home/wildfire/.vault-token

  vault:
    container_name: "vault"
    image: "vault:1.12.2"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "${TOKEN}"
      VAULT_ADDR: "http://0.0.0.0:8200"
    entrypoint: ['vault', 'server', '-dev', '-dev-listen-address=0.0.0.0:8200']
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK

  vault-init:
    container_name: vault-init
    build:
      context: "./vault"
      dockerfile: "Dockerfile"
    depends_on:
      - vault
    restart: "no"
    environment:
      VAULT_ADDR: "http://vault:8200"
      VAULT_TOKEN: "${TOKEN}"
